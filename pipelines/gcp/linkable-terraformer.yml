resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: 0.13.5

- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource
    tag: v0.6.0

- name: fly
  type: docker-image
  source:
    repository: troykinsella/concourse-fly-resource
    tag: 2.0.1

resources:
# The repo that contains Terraform
- name: pipeline-repo
  type: git
  icon: github
  source:
    uri: ((pipeline_repo))
    branch: ((pipeline_repo_branch))

- name: terraform-state
  type: terraform
  source:
    env_name: ((environment_name))
    backend_type: gcs
    backend_config:
      bucket: tf4k8s-pipelines-state-((uid))
      prefix: ((environment_name))/terraform/((gcp_storage_bucket_folder))
      credentials: ((gcp_account_key_json))

- name: fly
  type: fly
  source:
    url: ((concourse_url))
    username: ((concourse_username))
    password: ((concourse_password))
    team: ((concourse_team_name))
    insecure: ((concourse_is_insecure))
    debug: ((concourse_is_in_debug_mode))

- name: gcloud-credentials
  type: gcs-resource
  source:
    bucket: s3cr3ts-((uid))
    json_key: ((gcp_account_key_json))
    versioned_file: ((environment_name))/((gcp_service_account_key_filename))

- name: terraform-vars
  type: gcs-resource
  source:
    bucket: tf4k8s-pipelines-config-((uid))
    json_key: ((gcp_account_key_json))
    versioned_file: ((environment_name))/terraform/((gcp_storage_bucket_folder))/terraform.tfvars

jobs:
- name: terraform-plan
  plan:
  - get: pipeline-repo
    trigger: true
  - get: gcloud-credentials
    trigger: true
  - get: terraform-vars
    trigger: true
  - put: terraform-state
    params:
      terraform_source: pipeline-repo/terraform/((terraform_module))
      plan_only: true
      var_files: [terraform-vars/terraform.tfvars]
  on_failure:
    do:
      - put: fly
        params:
          options: trigger-job -j ((current_pipeline_name))/terraform-plan
        
- name: terraform-apply
  plan:
  - get: pipeline-repo
    trigger: true
    passed: [terraform-plan]
  - get: gcloud-credentials
    trigger: true
    passed: [terraform-plan]
  - get: terraform-state
    trigger: true
    passed: [terraform-plan]
  - put: terraform-state
    params:
      terraform_source: pipeline-repo/terraform/((terraform_module))
      plan_run: true
  on_failure:
    do:
      - put: fly
        params:
          options: trigger-job -j ((current_pipeline_name))/terraform-plan

- name: terraform-destroy
  plan:
  - get: pipeline-repo
    trigger: false
  - get: gcloud-credentials
    trigger: false
  - get: terraform-vars
    trigger: false
  - get: terraform-state
    trigger: false
  - put: terraform-state
    params:
      terraform_source: pipeline-repo/terraform/((terraform_module))
      action: destroy
      var_files: [terraform-vars/terraform.tfvars]
    get_params:
      action: destroy

- name: trigger-next-pipeline-job
  plan:
  - get: terraform-state
    trigger: true
    passed: [terraform-apply]
  - put: fly
    params:
      options: unpause-pipeline -p ((next_pipeline_name))
  - put: fly
    params:
      options: trigger-job -j ((next_pipeline_name))/((next_plan_name))