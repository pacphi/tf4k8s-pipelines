#!/usr/bin/env bash

## IAAS must be set to one of [ aws, azure, gcp, tkg/aws, tkg/azure ]

IAAS="REPLACE_ME"


## General settings

CARVEL_IMAGE="pacphi/terraform-resource-with-carvel"
TKG_IMAGE="pacphi/terraform-resource-with-tkg-tmc"

# Create pipelines config parent directory
TF4K8S_PIPELINES_CONFIG_PARENT_DIR=".tf4k8s"

# Use a regex to define the product version of Tanzu Application Service for Kubernetes (available on the Tanzu Network)
TAS4K8S_VERSION="3\.1\.0\-build\.*"
TF4K8S_PIPELINE_REPO_BRANCH="main"
SERVICE_ACCOUNT_NAME="tf4k8s-sa"
K8S_ENV="tf4k8s-demo"
BASE_NAME="REPLACE_ME"
BASE_DOMAIN="$BASE_NAME.me"
SUB_NAME="REPLACE_ME"
SUB_DOMAIN="$SUB_NAME.$BASE_DOMAIN"

EMAIL_ADDRESS="REPLACE_ME"
TANZU_NETWORK_ACCOUNT_USERNAME=$EMAIL_ADDRESS
TANZU_NETWORK_ACCOUNT_PASSWORD="REPLACE_ME"
TANZU_NETWORK_API_TOKEN="REPLACE_ME"


## AKS specific

AZ_REGION="West US 2"
AZ_SUBSCRIPTION_ID="REPLACE_ME"
AZ_TENANT_ID="REPLACE_ME"
AZ_APP_NAME="$SERVICE_ACCOUNT_NAME"
# Secret you select here must adhere to Azure's password policy
AZ_CLIENT_SECRET="REPLACE_ME"
AZ_RESOURCE_GROUP="REPLACE_ME"
# An existing storage account and key
AZ_STORAGE_ACCOUNT_NAME="REPLACE_ME"
AZ_STORAGE_ACCOUNT_KEY="REPLACE_ME"
AKS_NODES=8
AKS_NODE_TYPE="Standard_D4s_v3"


## EKS specific

AWS_SERVICE_ACCOUNT="$SERVICE_ACCOUNT_NAME"
# @see https://aws.amazon.com/blogs/security/aws-iam-introduces-updated-policy-defaults-for-iam-user-passwords/
AWS_SERVICE_ACCOUNT_PASSWORD="REPLACE_ME"
AWS_REGION="us-west-2"
AWS_ZONES=["us-west-2a", "us-west-2b", "us-west-2c"]
# Supply existing administrator credentials here (must have iam:CreateUser)
# We'll create a new service account that will itself have administrator privileges
# Values here will be replaced with those of the service account
AWS_ACCESS_KEY="REPLACE_ME"
AWS_SECRET_KEY="REPLACE_ME"
AWS_ROUTE53_BASE_HOSTED_ZONE_ID="REPLACE_ME"
EKS_NAME="REPLACE_ME"
EKS_DESIRED_NODES=5
EKS_MIN_NODES=8
EKS_MAX_NODES=10
EKS_K8S_VERSION="1.18.8-amazon2"
EKS_NODE_TYPE="t3a.medium"
SSH_KEY_NAME="REPLACE_ME"


## GKE specific

GCP_PROJECT="REPLACE_ME"
GCP_SERVICE_ACCOUNT="$SERVICE_ACCOUNT_NAME"
GCP_REGION="us-west1"
GKE_NODE_TYPE="e2-standard-4"
GKE_NODES=8


## TKG specific (applies to all targeted infra)

TKG_PLAN="dev"
TKG_K8S_VERSION="v1.19.1+vmware.2"
TKG_CONTROL_PLANE_NODE_COUNT=1
TKG_WORKER_NODE_COUNT=8


## TKG on AWS specific
# Be sure to fill out all EKS specific config above too
AWS_NODE_AZ="us-west1-a"
AWS_NODE_AZ_1="us-west1-b"
AWS_NODE_AZ_2="us-west1-c"
TKG_CONTROL_PLANE_MACHINE_TYPE="m5a.large"
TKG_WORKER_NODE_MACHINE_TYPE="m5a.xlarge"


## TKG on Azure specific
# Be sure to fill out all AKS specific config above too

AZ_REGION="westus2"
TKG_CONTROL_PLANE_MACHINE_TYPE="Standard_D2s_v3"
TKG_WORKER_NODE_MACHINE_TYPE="Standard_D4s_v3"


## rclone

RCLONE_ALIAS="REPLACE_ME"


## Concourse

CONCOURSE_ALIAS="local"
# If you are running a Docker Compose installation of Concourse do not change the settings below
CONCOURSE_URL="http://web:8080"
CONCOURSE_ADMIN_USERNAME="test"
CONCOURSE_ADMIN_PASSWORD="test"
CONCOURSE_TEAM="$SUB_NAME"
IS_CONCOURSE_INSECURE=true
IS_CONCOURSE_IN_DEBUG_MODE=true
